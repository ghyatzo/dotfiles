# vim:fileencoding=utf-8:ft=conf

# The shell program to execute. The default value of . means to use whatever
# shell is set as the default shell for the current user. Note that on macOS if
# you change this, you might need to add --login to ensure that the shell starts
# in interactive mode and reads its startup rc files
shell .

# the console editor to use when editing the kitty config file or similar tasks.
# A value of . means to use the enviroment variable EDITOR.  Note that this is
# enviroment variable has to be set not just in your shell startup scripts but
# system-wide, otherwise kitty will not see it
editor .

# Close the window when the child preocess (shell) exits. If no, the terminal
# will remain open when the child exits as long as there are processes
# outputting to the terminal (for example disowned or backgrounded processes).
# If yes, the window will close as soon as the child process exits. Note that
# setting it to yes means that any background processes wtill using the terminal
# can fail silently because their stdout/stderr/stdin no longer works.
close_on_child_death no

# Allow other programs to control kitty. If you turn this on other programs can
# control all aspects of kitty, including sending text to kitty windows, opening
# new windows, closing windows, reading the content of windows, etc. Note that
# this even works over ssh connections.
allow_remote_control yes

## Specify enviromental variables to set in all child processes. Note that
## enrivoment variables are expanded recursively, so if you use
##
## env MYVAR1=a
## env MYVAR2=${MYVAR1}/${HOME}/b
##
## the value of MYVAR2 will be a/<path to home>/b
#env [...]

# Path to a session file to use for all kitty instances. Can be overwritten by
# using the kitty --session command line option for individual instances. See
# 'Startup Sessions' in the kitty docs for details. Note that relative paths are
# interpreted with respect to the kitty config directory. Enviroment variables
# in the path are expanded.
startup_session none

# Allow programs running in kitty to read and write from the clipboard. You can
# control exactly which actions are allowed. The set of possible actions is:
# write-clipboard
# read-clipboard
# write-primary
# read-primary
# The default is to allow writing to the clipboard and primary selection. Note
# that enabling the read functionality is a security risk as it means that any
# program, even one running on a remote server via SSH can read your clipboard.
clipboard_control write-clipboard write_primary

# The value of the TERM enviroment variable to set. Changing this can break many
# terminal programs, only change it if you know what you are doing, not because
# you read some advice on Stack Overflow to change it. The TERM variable is used
# by various programs to get information about the capabilities and behaviour of
# the terminal. If you change it, depending on what programs you run, and how
# different the terminal you are changing it to is, various things from
# key-presses, to colors, to various advanced features may not work.
term xterm-kitty


