# vim:fileencoding=utf-8:ft=conf

# Key mapping
# For a list of key names, see: http://www.glfw.org/docs/latest/group__keys.html
# For a list of modifier names, see: http://www.glfw.org/docs/latest/group__mods.html
# You can use the special action no_op to unmap a keyboard shortcut that is
# assigned in the default configuration.

# The value of 'kitty_mod' is used as the modifier for all default shortcuts,
# you can change it in your kitty.conf to change the modifiers for all the
# default shortcuts.
kitty_mod ctrl+shift

# You can have kitty remove all shortcut definition seen up to this point.
# Useful, for instance, to remove the default shortcuts
clear_all_shortcuts yes



##Clipboard-------------------------------------------------------------------
map super+v             paste_from_clipboard
map super+c             copy_to_clipboard
map kitty_mod+s         paste_from_selection

    # pass the contents of the current selection to <program>
# map kitty_mod+o       pass_selection_to_program <program>
    # You can pass the current selection to a terminal program running in a new
    # kitty window, by using the @selection placeholder
# map kitty_mod+y       new_window <program> @selection



##Scrolling--------------------------------------------------------------------
map kitty_mod+k         scroll_line_up
map kitty_mod+j         scroll_line_down
map kitty_mod+page_up   scroll_page_up
map kitty_mod+page_down scroll_page_down
map kitty_mod+home      scroll_home
map kitty_mod+end       scroll_end
map kitty_mod+s         show_scrollback
    # You can pipe the contents of the current screen + history buffer as STDIN
    # to an arbitrary program using the pipe function. For example, the
    # following opens the scrollback buffer in less in a overlay window:
    # (for details: https://sw.kovidgoyal.net/kitty/pipe.html )
# map f1                pipe @ansi overlay less +g -R



## Window management - LASCIO LA MAGGIORPARTE A CHUNKWM-----------------------

    # Open a new window running an arbitrary program
# map kitty_mod+<key>   new_window <program>

    # Open a new window with the current directory set to the working directory
    # of the current window using:
# map <mapping>         new_window_with_cwd

    # Opern a new window allowed to control kitty via the kitty remote control
    # facility with prefixing @.
# map <mapping>         new_window @ <program>

#map super+n            new_os_window
#map kitty_mod+enter    new_window
#map kitty_mod+]        next_window
#map kitty_mod+[        previous_window
#map kitty_mod+f        move_window_forward
#map kitty_mod+b        move_window_backward
#map kitty_mod+`        move_window_to_top
#map kitty_mod+1        first_window
#map kitty_mod+2        second_window
#map kitty_mod+3        third_window
map super+w             close_window

## Tab management------------------------------------------------------------
map kitty_mod+l         next_tab
map kitty_mod+h         previous_tab
map kitty_mod+t         new_tab
map kitty_mod+w         close_tab
# map 0x36+w              close_tab
map kitty_mod+.         move_tab_forward
map kitty_mod+,         move_tab_backward
map kitty_mod+alt+t     set_tab_title
# goto tab maps
map kitty_mod+1         goto_tab 1
map kitty_mod+2         goto_tab 2
map kitty_mod+3         goto_tab 3
map kitty_mod+4         goto_tab 4
map kitty_mod+5         goto_tab 5
map kitty_mod+6         goto_tab 6
    # Open new tab with current directory set to the working directory of the
    # current tab using:
map kitty_mod+T         new_tab_with_cwd

    # Open tab with arbitrary command to run with
# map <mapping>         new_tab <program>


## Layout Management--------------------------------------------------------

# map kitty_mod+l       next_layout
# map <map>             goto_layout <layout>
# map <map>             last_used_layout



## Font Sizes---------------------------------------------------------------

map kitty_mod+up        increase_font_size
map kitty_mod+down      decrease_font_size
map kitty_mod+backspace restore_font_size


## Select and act on text--------------------------------------------------

# Use the hints kitten to select text and either pass it to an external program
# or insert it into the terminal or copy it to the clipboard


    # Open a currently visible URL using the keyboard. The program used to open the
    # URL is specified in 'open_url_with' option
map kitty_mod+e         kitten hints


    # Select path/filename and insert it into the terminal. Useful, for instance to
    # run git commands on a filename output from a previous git command
map kitty_mod+p>f kitten hints --type path --program -


    # Select a path/filename and open it with the default open program.
map kitty_mod+p>shift+f kitten hints --type path

    # Select a line of text and insert it into the terminal. Use for the output of
    # things like ls -1
map kitty_mod+p>l kitten hints --type line --program -


    # Select words and insert into terminal.
map kitty_mod+p>h kitten hints --type hash --program -



## Miscellaneous------------------------------------------------------------

# map alt+f             toggle_fullscreen
map kitty_mod+u kitten unicode_input
# map <map>             edit_config_file

    # Open the kitty shell in a new window/tab/overlay/os_window to control kitty
    # using commands.
# map <map>             kitty_shell window/tab/overlay/os_window

# map <map>             set_background_opacity +0.1
# map <map>             set_background_opacity -0.1
# map <map>             set_background_opacity 1
# map <map>             set_background_opacity default

# if you want to operate on all windows use 'all' instead of 'active'
    # Reset the terminal
# map <map>             clear_terminal reset active

    # Clear the terminal scrollback by erasing it
# map <map>             clear_terminal scrollback active

    # Scroll the contents of the screen into the scrollback
# map <map>             clear_terminal scroll active

    # Clear the terminal screen by erasing all contens
map kitty_mod+delete    clear_terminal clear active


## Combine commands
# It is possible to remap a <map> to multiple commands. In example scrolling the
# contents of the terminal in the scrollback and clearing the screen at the same
# time.
#
# map <map>              combine : clear_terminal scroll active : send_text normal,application

## Send arbitrary text
# You can tell kitty to send arbitrary (UTF-8) encoded text to the client
# program when pressing specified shortcut keys. For Example:
#
# map <map>             send_text all Special text
#
# This will send "Special text" when <map> is pressed. The text to be sent is a
# python string litteral so you can use escapes like \x1b to send control codes
# or \u21fb to send unicode characters (or you can just input the unicode
# characters directly fas UTF-8 text). The first argument to 'send_text' is the
# keyboard modes in which to activate the shortcut. The possible values are
# 'normal' or 'application' or 'kitty' or a comma separated combination of them.
# The special keyword 'all' means all the modes (who would have guessed). The
# modes 'normal' and 'application' refer to the DECCKM cursor key mode for
# terminals, 'kitty' refers to the special kitty extended keyboard protocol.
#
# Another example, that outputs a word and then moves to the cursor to the start
# of the line ( same as pressing the Home key):
#
# map <map>             send_text normal      Word\x1b[H
# map <map>             send_text application Word\x1b0H
