# Tex file snippets
global !p
texMathZones = ['texMathZone'+x for x in ['A', 'AS', 'B', 'BS', 'C', 'CS', 'D', 'DS', 'E', 'ES', 'F', 'FS', 'G', 'GS', 'H', 'HS', 'I', 'IS', 'J', 'JS', 'K', 'KS', 'L', 'LS', 'DS', 'V', 'W', 'X', 'Y', 'Z']]

texIgnoreMathZones = ['texMathText']

texMathZoneIds = vim.eval('map('+str(texMathZones)+", 'hlID(v:val)')")
texIgnoreMathZoneIds = vim.eval('map('+str(texIgnoreMathZones)+", 'hlID(v:val)')")

ignore = texIgnoreMathZoneIds[0]

def math():
	synstackids = vim.eval("synstack(line('.'), col('.') - (col('.')>=2 ? 1 : 0))")
	try:
		first = next(i for i in reversed(synstackids) if i in texIgnoreMathZoneIds or i in texMathZoneIds)
		return first != ignore
	except StopIteration:
		return False

def nomath():
	return not math()
endglobal

# --- Templates ---
snippet _homework "homework template" bA
\documentclass[a4paper]{report}
\usepackage[utf8]{inputenc}
\usepackage[T1]{fontenc}
\usepackage{textcomp}
\usepackage{url}

\usepackage{parskip}
\usepackage{emptypage}
\usepackage{amsmath, amsfonts, mathtools, amsthm, amssymb, mathtools}
\usepackage{tikz-cd}
\usepackage{mathrsfs}
\usepackage{bm}
\usepackage{wrapfig} % allows for text wrap around figure

\newcommand\N{\ensuremath{\mathbb{N}}}
\newcommand\R{\ensuremath{\mathbb{R}}}
\newcommand\Z{\ensuremath{\mathbb{Z}}}
\renewcommand\O{\ensuremath{\emptyset}}
\newcommand\Q{\ensuremath{\mathbb{Q}}}
\newcommand\C{\ensuremath{\mathbb{C}}}
\newcommand\K{\ensuremath{\mathbb{K}}}
\newcommand\F{\ensuremath{\mathbb{F}}}

% Put x\to \infty below \lim
\let\svlim\lim\def\lim{\svlim\limits}

% make implies and impledby shorter
\let\implies\Rightarrow
\let\impliedby\Leftarrow
\let\iff\Leftrightarrow
\let\epsilon\varepsilon

\usepackage{stmaryrd} % for \lightning
\newcommand\contra{\scalebox{1.5}{$\lightning$}}

\theoremstyle{definition}
\newtheorem{definition}{Definition}[chapter]
\newtheorem{theorem}{Theorem}[chapter]
\newtheorem{proposition}{Proposition}[chapter]
\newtheorem{lemma}{Lemma}[chapter]
\newtheorem{corollary}{Corollary}[chapter]
\newtheorem{result}{Result}[chapter]
\newtheorem{example}{Example}[chapter]

\theoremstyle{remark}
\newtheorem*{remark}{Remark}

\author{Camillo Schenone}
\title{%
	$1 \\\\
	\large $2}

\begin{document}
\maketitle
$0

\end{document}
endsnippet

snippet _figure "figure template" bA
\begin{figure}[$1]
	\centering
	$2
	\caption{$4}
\end{figure}
$0
endsnippet

snippet _subfig "subfigure" iA
\begin{subfigure}[$1]{${2:0.4\textwidth}}
	\includegraphics[${3:width=\textwidth}]{$4}
	\label{fig:$5}
\end{subfigure}$0
endsnippet

# --- Environments ---
snippet beg "section" bA
\\begin{$1}
	$0
\\end{$1}
endsnippet

snippet sec "section" bA
\section{$1}
$0
endsnippet

snippet seC "section" bA
\section*{$1}
$0
endsnippet

snippet ssec "subsec" bA
\subsection{$1}
$0
endsnippet

snippet sseC "subsec" bA
\subsection*{$1}
$0
endsnippet

context "nomath()"
snippet par "paragraph" bA
\paragraph{$1}
$0
endsnippet

snippet spar "subparagraph" bA
\subparagraph{$1}
$0
endsnippet

snippet 2cases "piecewise function" bA
\begin{cases}
	$1 & $2 \\\\
	$3 & $4 
\end{cases}
$0
endsnippet

snippet 3cases "piecewise function" bA
\begin{cases}
	$1 & $2 \\\\
	$3 & $4 \\\\
	$5 & $6
\end{cases}
$0
endsnippet

# --- Parenthesis ---
snippet lr( "left( right)" iA
\left( ${1:${VISUAL}} \right) $0
endsnippet

snippet () "()" iA
($1)$0
endsnippet

snippet lr| "left| right|" iA
\left| ${1:${VISUAL}} \right| $0
endsnippet

snippet lr[ "left[ right]" iA
\left[ ${1:${VISUAL}} \right] $0
endsnippet

snippet [] "[]" iA
[$1]$0
endsnippet

snippet lr{ "left{ right}" iA
\left\\{ ${1:${VISUAL}} \right\\} $0
endsnippet

snippet lra "leftangle rangle" iA
\left<${1:${VISUAL}} \right>$0
endsnippet

# --- Order&Logic operators ---
snippet => "implies" Ai
\implies 
endsnippet

snippet =< "impliedby" Ai
\impliedby 
endsnippet

context "math()"
snippet iff "iff" iA
\iff 
endsnippet

snippet == "equals" Ai
&= $1 \\\\
endsnippet

snippet != "notequals" iA
\neq 
endsnippet

snippet <= "leq" iA
\leq 
endsnippet

snippet >= "geq" iA
\geq 
endsnippet

context "math()"
snippet EE "exists" iA
\exists 
endsnippet

context "math()"
snippet AA "forall" iA
\,\forall 
endsnippet

context "math()"
snippet -> "to" iA
\to 
endsnippet

context "math()"
snippet <-> "lra" iA
\leftrightarrow 
endsnippet

context "math()"
snippet !> "mapsto" iA
\mapsto 
endsnippet

context "math()"
snippet incl "inclusion" iA
\xhookrightarrow\{\}
endsnippet

context "math()"
snippet comp "composition" iA
\circ 
endsnippet

context "math()"
snippet iso "isomorphic" iA
\cong 
endsnippet

context "math()"
snippet hom "homotopic" iA
\simeq 
endsnippet

context "math()"
snippet \\\ "setminus" iA
\setminus 
endsnippet


# --- Subscript ---
context "math()"
snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

context "math()"
snippet '([A-Za-z])_(\d\d)' "auto subscript double digit" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

snippet __ "subscript" iA
_{$1}$0
endsnippet

context "math()"
snippet xn "x_n" iA
x_{n}
endsnippet

context "math()"
snippet res "restricted to" iA
_{\mid_{$1}}$0
endsnippet


# --- Superscript
context "math()"
snippet td "to the ..." iA
^{$1}$0
endsnippet

context "math()"
snippet rd "to the ..." iA
^{($1)}$0
endsnippet

context "math()"
snippet invs "inverse" iA
^{-1}
endsnippet

context "math()"
snippet compl "complement" iA
^{c}
endsnippet


# --- Sets ---
context "math()"
snippet set "set" wA
\\{$1\\} $0
endsnippet

context "math()"
snippet cc "subset" Ai
\subset 
endsnippet

context "math()"
snippet DD "superset" Ai
\supset 
endsnippet

context "math()"
snippet c= "subset" Ai
\subseteq 
endsnippet

context "math()"
snippet D= "superset" Ai
\supseteq 
endsnippet

context "math()"
snippet nin "not in " iA
\not\in 
endsnippet

context "math()"
snippet inn "in " iA
\in 
endsnippet


# --- Operations & Elementary functions
snippet ** "cdot" iA
\cdot 
endsnippet

context "math()"
snippet pdel "partial" iA
\partial
endsnippet

context "math()"
snippet norm "norm" iA
\| $1\| $0
endsnippet

context "math()"
snippet abs "absolute value" iA
\mid $1\mid $0
endsnippet

context "math()"
snippet xx "cross prod" iA
\times 
endsnippet

context "math()"
snippet ox "tensor product" iA
\otimes 
endsnippet

context "math()"
snippet uu "cup" iA
\cup
endsnippet

context "math()"
snippet pp "cap" iA
\cap
endsnippet

context "math()"
snippet '(?<!\\)(sin|cos|cot|csc|ln|log|exp|star|perp|max|sup)' "ln" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

context "math()"
snippet '(?<!\\)(arcsin|arccos|arctan|arccot|arccsc|arcsec|pi|zeta|int)' "ln" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

context "math()"
snippet dsum "direct sum" iA
\oplus 
endsnippet



# --- Big Notations
context "math()"
snippet // "fraction" iA
\\frac{$1}{$2}$0
endsnippet

context "math()"
snippet sum "sum" wA
\sum_{${1:i}}^{${2:\infty}} ${3:a}
endsnippet

context "math()"
snippet lim "lim" wA
\lim_{${1:n} \to ${2:\infty}} $0
endsnippet

context "math()"
snippet seq "sequence" i
\\left(${1:x_n}\\right)_{${2}}$0
endsnippet

context "math()"
snippet intg "integrazioni" wA
\int_{${1:-\infty}}^{$2:\infty}} ${3:${VISUAL}} $0
endsnippet

context "math()"
snippet Dsum "big direct sum" wA
\bigoplus_{$1}^{$2}$3 $0
endsnippet

context "math()"
snippet Ox "big tensor product" wA
\bigotimes_{$1}^{$2}$3 $0
endsnippet


context "math()"
snippet UU "big cup" iA
\bigcup
endsnippet

context "math()"
snippet PP "big cap" iA
\cap
endsnippet
# ---- TEXT AND STUFF ----
snippet mk "inline math" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
	snip.rv = ' '
else:
	snip.rv = ''
`$2
endsnippet

snippet dm "display math" wA
\[
	$1
.\] $0
endsnippet

context "math()"
snippet tt "text" iA
\text{$1}$0
endsnippet

snippet ttit "text italics" wA
\textit{$1} $0
endsnippet

snippet ttbf "text bold" wA
\textbf{$1} $0
endsnippet

context "math()"
snippet "bar" "bar" riA
\overline{$1}$0
endsnippet

context "math()"
snippet "line" "underline" riA
\underline{$1}$0
endsnippet

context "math()"
snippet "hat" "hat" riA
\hat{$1}$0
endsnippet

# context "math()"
# snippet "dot" "dot" riA
# \dot{$1}$0
# endsnippet

context "math()"
snippet '([a-zA-Z])dot' "dot" riA
\dot{`!p snip.rv = match.group(1)`}$0
endsnippet

# context "math()"
# snippet '([a-zA-Z])bar' "bar" riA
# \overline{`!p snip.rv = match.group(1)`}
# endsnippet

# context "math()"
# snippet '([a-zA-Z])hat' "hat" riA
# \hat{`!p snip.rv = match.group(1)`}
# endsnippet

context "math()"
snippet "  " "space" iA
\, 
endsnippet

snippet ooo "infinity" iA
\infty
endsnippet

snippet ... "dots" iA
\ldots
endsnippet



# TO BE CONTINUED, aggiungi corsivo
